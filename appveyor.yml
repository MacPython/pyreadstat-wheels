environment:

  global:
      # Remember to edit .travis.yml too
      BUILD_COMMIT: f99951f07baea3960ae7d642c0adfe5ddd6f0f91
      WHEELHOUSE_UPLOADER_USERNAME: travis-worker
      WHEELHOUSE_UPLOADER_SECRET:
        secure:
            9s0gdDGnNnTt7hvyNpn0/ZzOMGPdwPp2SewFTfGzYk7uI+rdAN9rFq2D1gAP4NQh

  matrix:
    - PYTHON_VERSION: "3.5"
      CONDAPATH: 'C:\Miniconda35'
    - PYTHON_VERSION: "3.6"
      CONDAPATH: 'C:\Miniconda36'
    - PYTHON_VERSION: "3.7"
      CONDAPATH: 'C:\Miniconda37'

  platform:
    - x64
    - x86

install:
  - git submodule update --init
  # activate conda base environment
  - if "%PLATFORM%" == "x64" set CONDAPATH=%CONDAPATH%-x64
  - call %CONDAPATH%\Scripts\activate
  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  # prepare environment with conda
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install -q setuptools pandas pip libpython cython
  # mingw64 toolchain to compile python extensions
  - conda install -q -c msys2 m2w64-toolchain
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - conda install -q wheel==0.26
  
build_script:
  # Build and install the wheel
  - cd pyreadstat
  - git fetch origin
  - git checkout %BUILD_COMMIT%
  # set mingw32 as compiler and produce the wheel
  - python.exe setup.py config --compiler=mingw32
  - python.exe setup.py bdist_wheel 
  - ps: "ls dist"
  - ps: |
      # Upload artifact to Appveyor immediately after build
      ls dist -r | Foreach-Object {
          appveyor PushArtifact $_.FullName
          pip install $_.FullName
      }
  - cd dist
  - pip install --pre --no-index -f . pyreadstat
  - cd ..

test_script:
  # Run some tests
  - mkdir tmp
  - cd tmp
  - python ../pyreadstat/tests/test_basic.py
  - cd ..

after_test:
  # If tests are successful, create binary packages for the project.
  - dir dist

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - python -m wheelhouse_uploader upload
    --local-folder=dist --no-update-index
    wheels
